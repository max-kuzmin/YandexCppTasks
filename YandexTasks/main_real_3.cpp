/*
В результате ряда неудачных попыток попасть по мишеням в игровом тире Вася совсем отчаялся и подумал, что даже случайное ружье стреляло бы лучше, чем он.
Вам предстоит проверить эту гипотезу!
Мишень в игровом тире представляет из себя прямоугольник, состоящий из n×mn×m одинаковых клеток. Вася убежден, что настоящее случайное ружье при каждом выстреле попадает в любую из клеток с одинаковой вероятностью 1nm1nm.
Посчитайте математическое ожидание количества простреленных клеток случайным ружьем, если известно, что ружье совершило kk выстрелов.
Обратите внимание, что по правилам игрового тира клетка считается простреленной, если по ней было совершено хотя бы одно попадание.
Формат ввода

В единственной строке входных данных записано три целых числа — nn, mm, kk ( 1≤n,m,k≤91≤n,m,k≤9), разделенных одним пробелом.
Формат вывода

В единственной строке выходных данных выведите вещественное число, равное искомому математическому ожиданию. Ответ будет считаться правильным, если относительная погрешность не превосходит 10−910−9.
Пример 1

Ввод	Вывод
1 1 1
1.000000000000
Пример 2

Ввод	Вывод
2 2 9
3.699661254883
Пример 3

Ввод	Вывод
9 9 2
1.987654320988
*/


#include <iostream>
#include <fstream>
#include <string>
#include <iomanip>
#include <random>


using namespace std;

int main003(int argc, char* argv[])
{
    ifstream ifile;
    ifile.open("input.txt");

    int n, m, k;
    ifile >> n >> m >> k;
    ifile.close();

    char* field = new char [n * m];


    long iters = 100000000;
    long mean = 0;
    long per_one = RAND_MAX / (m * n);

    int i, x;
    int cells_count = n * m;

    for (long num = 0; num < iters; num++)
    {
        for (i = 0; i < cells_count; i++)
        {
            field[i] = 0;
        }

        for (x = 0; x < k; x++)
        {
            field[rand() / per_one] = 1;
        }

        for (i = 0; i < cells_count; i++)
        {
            if (field[i] == 1)
                mean++;
        }
    }

    double meand = mean / (double)iters;
    free(field);


    ofstream ofile;
    ofile.open("output.txt", ios_base::trunc);
    ofile << std::setprecision(17) << meand << endl;
    ofile.close();
    return 0;
}
